CC = gcc
INCLUDES = -I../emulator -I../data -I.
CFLAGS = -g -Wall -Wextra -Wshadow $(INCLUDES)
LDFLAGS = 

ifeq ($(OS),Windows_NT)
    UNAME_S := Windows
	RM = del
else
    UNAME_S := $(shell uname -s)
	RM = rm -f
endif
ifeq ($(UNAME_S), Darwin)
    LDFLAGS += -framework CoreFoundation -framework ApplicationServices -pthread
endif

SRCS = testing.c
TARGET = testing

SRCS += $(wildcard ../emulator/*.c)
ifneq ($(UNAME_S), Darwin)
SRCS := $(filter-out ../emulator/system_mac.c,$(SRCS))
endif
OBJS = $(SRCS:.c=.o)
# Default target
all: $(TARGET)

# Linking
$(TARGET): $(OBJS)
	$(CC) $(OBJS) $(LDFLAGS) -o $(TARGET)

# Compiling
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Clean up
clean:
	$(RM) *.hex *.bin *.map *.elf *.exe

# Phony targets
.PHONY: all clean
